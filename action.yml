name: Rebase Upstream
description: Use git rebase to sync with upstream
author: imba-tjd
branding:
  icon: git-pull-request
  color: green

inputs:
  upstream:
    description: <user>/<repo> or the full HTTP URL
    required: false
  branch-source:
    description: The upstream branch that is rebased on
    required: false
    default:  main
  branch-target:
    description: The downstream branch that is being rebased
    required: false
    default:  main
  depth:
    description: Greater than the number of commits the upstream made in a period
    required: false
    default:  100
  push:
    description: Do the force push in this action
    required: false
    default:  true

runs:
  using: composite
  steps:
    - run: |
        set -ex;

        UPSTREAM=${{ inputs.upstream }};
        if [ -z $UPSTREAM ]; then
            echo ${{ github.token }} | gh auth login --with-token;
            UPSTREAM=$(gh api repos/:owner/:repo --jq .parent.full_name);
            if [ -z $UPSTREAM ]; then echo "Can't find upstream" >&2 && exit 1; fi;
        fi;
        if [ ! $(echo $UPSTREAM | egrep '^(http|git@)') ]; then
            UPSTREAM=https://github.com/$UPSTREAM.git
        fi;
        if [ ${{ inputs.depth }} -ne 0 ]; then
            DEPTH=--depth=${{ inputs.depth }}
        fi;

        git remote add upstream $UPSTREAM;

        git fetch upstream ${{ inputs.branch-source }} $DEPTH;

        git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com";
        git config --local user.name  "GitHub Actions";
        
        if [ "${{ inputs.branch-source }}" != "${{ inputs.branch-target }}" ]; then
          git rebase ${{ inputs.branch-target }} --onto upstream/${{ inputs.branch-source }}
        else
          git rebase upstream/${{ inputs.branch-source }};
        fi
        
        if [ "${{ inputs.push }}" = "true" -a "$(git status | grep diverged)" ]; then
            git push origin $(git branch --show-current) --force-with-lease;
        fi;
      shell: bash
